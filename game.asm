#####################################################################
#
# CSCB58 Winter 2025 Assembly Final Project
# University of Toronto, Scarborough
#
# Student: Colten Nickerson, 1010120717, nicker42, colten.nickerson@mail.utoronto.ca
#
# Bitmap Display Configuration:
# - Unit width in pixels: 8 (update this as needed)
# - Unit height in pixels: 8 (update this as needed)
# - Display width in pixels: 512 (update this as needed)
# - Display height in pixels: 512 (update this as needed)
# - Base Address for Display: 0x10008000 ($gp)
#
# Which milestoneshave been reached in this submission?
# (See the assignment handout for descriptions of the milestones)
# - Milestone 1/2/3/4 (choose the one the applies)
#
# Which approved features have been implemented for milestone 3?
# (See the assignment handout for the list of additional features)
# 1. (fill in the feature, if any)
# 2. (fill in the feature, if any)
# 3. (fill in the feature, if any)
# ... (add more if necessary)
#
# Link to video demonstration for final submission:
# - (insert YouTube / MyMedia / other URL here). Make sure we can view it!
#
# Are you OK with us sharing the video with people outside course staff?
# - yes / no / yes, and please share this project github link as well!
#
# Any additional information that the TA needs to know:
# - (write here, if any)
#
#####################################################################

.data
# Image Dimensions: 64 x 64
level:
    .word 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B,
           0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x4A494A, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454,
           0x545454, 0x4A494A, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x4A494A, 0x545454, 0x545454, 0x545454, 0x2B2B2B, 0x2B2B2B, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x4A494A, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454,
           0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x4A494A, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x545454, 0x4A494A, 0x545454, 0x545454, 0x545454, 0x545454, 0x2B2B2B, 0x2B2B2B, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646,
           0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646,
           0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x2B2B2B, 0x2B2B2B, 0x464646, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x4A4A4A, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x4A4A4A, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959,
           0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x4A4A4A, 0x595959, 0x595959, 0x595959, 0x464646, 0x2B2B2B, 0x2B2B2B, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x4A4A4A, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x595959, 0x595959,
           0x595959, 0x595959, 0x595959, 0x595959, 0x4A4A4A, 0x595959, 0x4A4A4A, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x4A4A4A, 0x595959, 0x595959, 0x4A4A4A, 0x595959, 0x595959, 0x595959, 0x595959, 0x2B2B2B, 0x2B2B2B, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x4A4A4A, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959,
           0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x4A4A4A, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x4A4A4A, 0x595959, 0x595959, 0x595959, 0x595959, 0x2B2B2B, 0x2B2B2B, 0x595959,
           0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x4A4A4A, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x4A4A4A, 0x595959, 0x4A4A4A, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959,
           0x595959, 0x595959, 0x595959, 0x4A4A4A, 0x595959, 0x595959, 0x4A4A4A, 0x595959, 0x595959, 0x595959, 0x595959, 0x2B2B2B, 0x2B2B2B, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x4A4A4A, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x4A4A4A, 0x595959,
           0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x4A4A4A, 0x595959, 0x595959, 0x595959, 0x595959, 0x2B2B2B, 0x2B2B2B, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x4A4A4A, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D,
           0x464646, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x595959, 0x4A4A4A, 0x595959, 0x4A4A4A, 0x4A4A4A, 0x595959, 0x595959, 0x595959, 0x4A4A4A, 0x4A4A4A, 0x4A4A4A, 0x4A4A4A, 0x4A4A4A, 0x4A4A4A, 0x4A4A4A, 0x4A4A4A, 0x4A4A4A, 0x4A4A4A, 0x4A4A4A, 0x4A4A4A, 0x4A4A4A, 0x595959, 0x595959, 0x4A4A4A, 0x595959, 0x595959, 0x595959, 0x595959, 0x2B2B2B, 0x2B2B2B, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C,
           0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x4A4A4A, 0x5C5C5C,
           0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x2B2B2B, 0x2B2B2B, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x4A4A4A, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5E5D5E, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C,
           0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x4A4A4A, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x2B2B2B, 0x2B2B2B, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C,
           0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x4A4A4A, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x2B2B2B, 0x2B2B2B, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x4A4A4A, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C,
           0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x4A4A4A, 0x4A4A4A, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x5C5C5C, 0x2B2B2B, 0x2B2B2B, 0x575757, 0x575757, 0x616061,
           0x575757, 0x616061, 0x616061, 0x616061, 0x575757, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x575757, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666,
           0x666666, 0x666666, 0x666666, 0x666666, 0x575757, 0x666666, 0x666666, 0x666666, 0x666666, 0x2B2B2B, 0x2B2B2B, 0x616061, 0x616061, 0x616061, 0x616061, 0x616061, 0x616061, 0x616061, 0x575757, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x575757, 0x575757, 0x666666, 0x666666,
           0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x666666, 0x575757, 0x666666, 0x666666, 0x666666, 0x666666, 0x2B2B2B, 0x2B2B2B, 0x5E5D5E, 0x5E5D5E, 0x5E5D5E, 0x5E5D5E, 0x5E5D5E, 0x5E5D5E, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x3D0215, 0x3D0215, 0x3D0215, 0x3D0215, 0x471021, 0x471021, 0x471021, 0x471021, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x471021, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x4F001A, 0x4F001A, 0x471021, 0x4F001A, 0x4F001A, 0x4F001A, 0x471021, 0x471021, 0x6B6B6B, 0x471021, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D,
           0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A,
           0x4F001A, 0x471021, 0x471021, 0x471021, 0x6B6B6B, 0x3D0215, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x6B6B6B, 0x471021, 0x471021, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x6B6B6B, 0x6B6B6B, 0x471021, 0x3D0215, 0x3D0215, 0x3D0215, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x3D0215, 0x3D0215, 0x3D0215,
           0x471021, 0x471021, 0x471021, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x471021, 0x471021, 0x3D0215, 0x471021, 0x3D0215, 0x3D0215, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x3D0215, 0x3D0215, 0x3D0215, 0x2B2B2B, 0x2B2B2B, 0x471021, 0x471021, 0x3D0215, 0x3D0215, 0x3D0215, 0x6B6B6B, 0x471021, 0x4F001A, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B,
           0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x3D0215, 0x6B6B6B, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x471021, 0x471021, 0x471021, 0x3D0215, 0x3D0215, 0x464646, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x464646, 0x3D0215, 0x3D0215, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x471021,
           0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x3D0215, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x471021, 0x6B6B6B, 0x4F001A, 0x4F001A, 0x471021, 0x471021, 0x471021, 0x3D0215, 0x3D0215, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x3D0215, 0x3D0215, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x4F001A,
           0x4F001A, 0x471021, 0x471021, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x3D0215, 0x3D0215, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x3D0215, 0x6B6B6B, 0x6B6B6B, 0x471021, 0x471021, 0x3D0215, 0x3D0215, 0x3D0215, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D,
           0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x3D0215, 0x3D0215, 0x3D0215, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x471021, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x4F001A, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x3D0215, 0x3D0215, 0x3D0215, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x471021, 0x471021, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x471021, 0x4F001A, 0x4F001A, 0x3D0215, 0x3D0215, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x3D0215, 0x3D0215, 0x471021, 0x471021, 0x4F001A, 0x4F001A, 0x4F001A, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x3D0215, 0x3D0215, 0x3D0215, 0x3D0215,
           0x3D0215, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x3D0215, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B,
           0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D,
           0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x4D4D4D, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x5E5D5E, 0x5E5D5E, 0x5E5D5E, 0x4D4D4D, 0x5E5D5E, 0x5E5D5E, 0x5E5D5E, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x5E5D5E, 0x5E5D5E, 0x5E5D5E, 0x5E5D5E, 0x5E5D5E, 0x5E5D5E, 0x5E5D5E, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x5E5D5E, 0x5E5D5E, 0x5E5D5E, 0x5E5D5E, 0x4D4D4D, 0x4D4D4D, 0x5E5D5E, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x5E5D5E, 0x5E5D5E, 0x5E5D5E, 0x5E5D5E, 0x5E5D5E, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D,
           0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B,
           0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D,
           0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x5E5D5E, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x5E5D5E, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x4D4D4D, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x464646,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x4D4D4D, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B,
           0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D,
           0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x464646, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x4D4D4D, 0x464646, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x5E5D5E, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x6B6B6B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B,
           0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B,
           0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x2B2B2B, 0x787878, 0x787878, 0x8A8184, 0x8A8184, 0x8A8184, 0x8A8184, 0x8A8184, 0x787878, 0x787878, 0x666566, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x8A8184, 0x8A8184, 0x8A8184, 0x8A8184, 0x8A8184, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x666566, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878,
           0x8A8184, 0x8A8184, 0x8A8184, 0x8A8184, 0x8A8184, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x666566, 0x787878, 0x787878, 0x787878, 0x8A8184, 0x808080, 0x787878, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x808080, 0x808080, 0x808080, 0x666566, 0x787878, 0x808080, 0x787878, 0x808080, 0x787878, 0x808080, 0x808080, 0x808080, 0x808080, 0x808080, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x787878, 0x787878, 0x808080, 0x787878, 0x808080, 0x808080,
           0x808080, 0x808080, 0x808080, 0x808080, 0x787878, 0x787878, 0x666566, 0x787878, 0x808080, 0x808080, 0x808080, 0x808080, 0x787878, 0x787878, 0x471021, 0x471021, 0x471021, 0x471021, 0x471021, 0x808080, 0x808080, 0x808080, 0x808080, 0x787878, 0x787878, 0x808080, 0x808080, 0x787878, 0x666566, 0x787878, 0x808080, 0x471021, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x666566, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878,
           0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x666566, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x787878, 0x666566, 0x787878, 0x787878

player_sprite: # 8 x 8 sprite
	.word 0x000000, 0x000000, 0x000000, 0x000000, 0xC3C3C3, 0x000000, 0x000000, 0x000000,
           0x000000, 0x000000, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0x000000,
           0x000000, 0x000000, 0xC3C3C3, 0xB90505, 0xC3C3C3, 0xB90505, 0xC3C3C3, 0x000000,
           0x000000, 0x000000, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0x000000,
           0x000000, 0x000000, 0x000000, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0x000000, 0x000000,
           0x000000, 0x000000, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0x000000,
           0x000000, 0x000000, 0x000000, 0xC3C3C3, 0xC3C3C3, 0xC3C3C3, 0x000000, 0x000000,
           0x000000, 0x000000, 0x000000, 0xC3C3C3, 0x000000, 0xC3C3C3, 0x000000, 0x000000

### GAME DATA
.eqv BASE_ADDRESS 0x10008000
.eqv MAX_PIXELS 4096
.eqv OFFSET 256
.eqv DEFAULT_FRAME_RATE 35

curplayerlocation: .word 0x10008000
spawnpoint: .word 0x1000B408 		# Player spawnpoint for each level
platformcolour: .word 0x2B2B2B 		# Unique platform colour used for detection
collision: .word 0
jumpcount: .word 0
playerstate: .word 0   			# 0: Standing state, 1: Jumping state, 2: Falling state
jumpframes: .word 0

.text
.global main

main:

	li $t0, BASE_ADDRESS 		# $t0 stores the base address for display 
	la $t1, level        		# $t1 = pointer to level background
    	li $t2, MAX_PIXELS           	# $t2 = total number of pixels (64x64)
	

## Update the screen to the start of the level
make_level:
	li $t0, BASE_ADDRESS
	la $t1, level
	li $t2, MAX_PIXELS
	
	draw_level:
		beqz $t2, drawn_level	# If all pixels are drawn, exit loop

    		lw $t3, 0($t1)		# Load pixel color from level1
    		sw $t3, 0($t0)		# Store pixel color to display

    		addi $t0, $t0, 4	# Move to next display pixel
    		addi $t1, $t1, 4	# Move to next image pixel
    		subi $t2, $t2, 1	# Decrement pixel counter

    		j draw_level
    		
    	drawn_level:
    		lw $t0, spawnpoint	# Load spawn point
    		sw $t0, curplayerlocation # Update current player location to spawnpoint
    		jal draw_player		# Draw the players character
    		j game_loop 		# Replace with game loop later
# GAME LOOP #
game_loop:
    	li $t9, 0xffff0000 
    	lw $t8, 0($t9) 
    	beq $t8, 1, keypress_happened
    	
    	
    	li $v0, 32 
    	li $a0, DEFAULT_FRAME_RATE
	syscall
	
	j update_player_state
    
    	j game_loop       		# If no valid key pressed, loop
   
move_left:
    	jal check_collision_left 	# Check if its safe to move right
    	lw $t0, collision
    	bnez $t0, abort_move
    	
    	jal erase_player      		# Erase current sprite by re-drawing the level background
    	lw $t7, curplayerlocation
    	addi $t7, $t7, -4     		# Move left by 1 pixel (4 bytes)
    	sw $t7, curplayerlocation
    	jal draw_player       		# Draw sprite in the new location
    	
    	jal check_collision_left	# Check collision again to see if the character can move one more pixel
    	lw $t0, collision
    	bnez $t0, abort_move
    	
    	jal erase_player      		# Erase current sprite by re-drawing the level background
    	lw $t7, curplayerlocation
    	addi $t7, $t7, -4     		# Move left by 1 pixel (4 bytes)
    	sw $t7, curplayerlocation
    	jal draw_player			# Draw sprite in the new location
    	
    	j update_player_state
    	
move_right:
    	jal check_collision_right	# Check if its safe to move right
    	lw $t0, collision
    	bnez $t0, abort_move
    
    	jal erase_player		# Erase current sprite by re-drawing the level background
    	lw $t7, curplayerlocation
    	addi $t7, $t7, 4      		# Move right by 1 pixel (4 bytes)
    	sw $t7, curplayerlocation
    	jal draw_player			# Draw sprite in the new location
    	
    	jal check_collision_right	# Check collision again to see if the character can move one more pixel
    	lw $t0, collision
    	bnez $t0, abort_move
    	
    	jal erase_player		# Erase current sprite by re-drawing the level background
    	lw $t7, curplayerlocation
    	addi $t7, $t7, 4      		# Move right by 1 pixel (4 bytes)
    	sw $t7, curplayerlocation
    	jal draw_player			# Draw sprite in the new location
    	
    	j update_player_state
    	
jump:
    	jal check_collision_below 	# Check to see if charachter is touching the ground before trying to jump
    	lw $t0, collision        
    	beqz  $t0, abort_move
    
    	la $t0, playerstate		# Update the player state to jumping
	li $t1, 1
	sw $t1, 0($t0)
	
	j update_player_state
		
jumping_state:
	# Check for collision above head if yes then start falling state (Add after I make platforms in the level) ##########################################
	
	lw $t1, jumpframes
	bleu $t1, 7, jumping		# Move up 7 pixels maximum for a jump
	beq $t1, 14, change_fall_state	# Dont change state untill another 7 frames so the character floats at the peak of jump for a bit
	
	la $t0, jumpframes		# Update the jump frames of the character
    	lw $t1, jumpframes
    	addi $t1, $t1, 1		# Increment jump frames
	sw $t1, 0($t0)
	
	j game_loop

jumping:
	jal erase_player      		# Erase current sprite by re-drawing the level background
    	lw $t7, curplayerlocation
    	addi $t7, $t7, -OFFSET     	# Move up by one pixel as a jump
    	sw $t7, curplayerlocation
    	jal draw_player                 # Draw sprite in the new location
    	
    	la $t0, jumpframes		# Update the jump frames of the character
    	lw $t1, jumpframes
    	addi $t1, $t1, 1         	# Increment jump frames
	sw $t1, 0($t0)
    	
    	j game_loop

update_player_state:
	lw $t0, playerstate

	beq $t0, 1, jumping_state 	# Check if in jumpstate
	beq $t0, 2, falling_state 	# Check if in fallstate
	
	jal check_collision_below	# Check if character is on a platform
	lw $t1, collision
	bnez $t1, game_loop 		# Character is standing
	
	j change_fall_state		# If the character is not on a platform then change to falling state
	
change_fall_state:
		la $t0, playerstate	# Update the player state to falling
		li $t1, 2
		sw $t1, 0($t0)
		
		j game_loop
		
change_stand_state:
	la $t0, playerstate		# Update the player state to standing
	li $t1, 0
	sw $t1, 0($t0)
	
	la $t0, jumpframes		# Update the jump frames of the character
    	li $t1, 0
	sw $t1, 0($t0)
	
	j game_loop
	
falling_state:
	jal check_collision_below 	# Check if player is standing on a platform
	lw $t0, collision
    	bnez $t0, change_stand_state
    	
    	j fall				# If they are not on a platform then fall
    	
fall:
	jal erase_player      		# Erase current sprite by re-drawing the level background
    	lw $t7, curplayerlocation
    	addi $t7, $t7, OFFSET     	# Move down by one pixel
    	sw $t7, curplayerlocation
    	jal draw_player
    	
    	j game_loop
    
abort_move:
    j update_player_state
	
# Evaluate which key press happened
keypress_happened:
	lw $t2, 4($t9) 			# Assumes $t9 is set to 0xfff0000 from before 
	beq $t2, 0x61, move_left 	# ASCII code of 'a' is 0x61, move left if pressed
	beq $t2, 0x64, move_right 	# ASCII code of 'd' is 0x64, move right if pressed
	beq $t2, 0x77, jump		# ASCII code of 'w' is 0x77, jump up if pressed
	
	j update_player_state


draw_player: # NOTE set register with different sprites before calling to allow function to be used for any 8x8 enemy later maybe?
	lw $s0, curplayerlocation
	la $s1, player_sprite
	li $s4, 0x000000 		# BLACK
	
	li $s2, 8 			# Rows
	row_loop:
		beqz $s2, exit_draw_player
		
		li $s3, 8 		# Columns
	col_loop:
		beqz $s3, finish_row 	# Move to the next row once this row is finished
		
		lw $t2, 0($s1) 		# Load sprite pixel
		beq $t2, $s4, skip_pixel # If pixel is black in the sprite then skip overwriting it
		sw $t2, 0($s0) 		# Store the pixel to display
	skip_pixel:
		addi $s1, $s1, 4 	# Next sprite pixel
		addi $s0, $s0, 4 	# Next display pixel
		subi $s3, $s3, 1 	# Decrement Col counter
		j col_loop
	finish_row:
		li $t3, 64 		# Number of pixel units in a row
		sub $t3, $t3, 8 	# Subtract the amount of pixels/ columns we wrote to
		sll $t3, $t3, 2 	# Shift twice to multiply by 4 bytes per pixel
		
		add $s0, $s0, $t3 	# Next Rows first display pixel
		
		subi $s2, $s2, 1 	# Decrement Row counter
		j row_loop
		
	exit_draw_player:
		jr $ra
		
erase_player: # NOTE set register with different sprites before calling to allow function to be used for any 8x8 enemy later maybe?
	lw $s0, curplayerlocation
	li $t1, BASE_ADDRESS
	la $t2, level
	sub $t3, $s0, $t1 		# Curent player location - BASE_ADDRESS to find how much they differ by
	add $t2, $t2, $t3		# Add this difference to the address of the array index for the level
	
	li $s1, 8 			# Rows
	erase_row:
		beqz $s1, exit_erase_player
		
		li $s2, 8 		# Columns
	erase_col:
		beqz $s2, row_erased
		lw $t4, 0($t2) 		# Load background pixel
		sw $t4, 0($s0) 		# Store the pixel to display
		addi $s0, $s0, 4 	# Increment the display pixel
		addi $t2, $t2, 4 	# Increment the background pixel
		
		subi $s2, $s2, 1 	# Decrement Column counter
		j erase_col
		
	row_erased:
		li $t5, 64 		# Number of pixel units in a row
		subi $t5, $t5, 8 	# Subtract the amount of pixels/ columns we wrote to
		sll $t5, $t5, 2 	# Shift twice to multiply by 4 bytes per pixel

		add $s0, $s0, $t5 	# Next Rows first display pixel
		add $t2, $t2, $t5 	# Next Rows matching background pixel
		
		subi $s1, $s1, 1 	# Decrement Row counter
		j erase_row
		
	exit_erase_player:
		jr $ra
	
check_collision_left:
	lw $t0, curplayerlocation
	li $s0, BASE_ADDRESS
	la $t1, level
	
	lw $t4, platformcolour
	
	addi $t0, $t0, 8		# Original sprite is off by 2 pixels
	
	addi $t0, $t0, -4		# Location we are checking
	sub $t2, $t0, $s0 		# Curent player location - BASE_ADDRESS to find how much they differ by
	add $t1, $t1, $t2		# Add this difference to the address of the array index for the level
	
	li $t8, 8 			# Row counter
	collision_left_loop:
		beqz $t8, no_collision_left
		
		lw $t3, 0($t1) 		# Load the background pixel
		beq $t3, $t4, found_collision_left # If the background colour at this position equals the platform colour then there is a collision
		
		li $t5, OFFSET 		# Offset for my pixels
		
		add $t1, $t1, $t5 	# Find the next pixel to check by adding offset
		
		subi $t8, $t8, 1 	# Decrement Row counter
		
		j collision_left_loop
		
	no_collision_left:
		la $s1, collision 	# Update the collision variable
		li $s2, 0
		sw $s2, 0($s1)
		jr $ra
	
	found_collision_left:
		la $s1, collision 	# Update the collision variable
		li $s2, 1
		sw $s2, 0($s1)
		jr $ra 
		 
check_collision_right:
	lw $t0, curplayerlocation
	li $s0, BASE_ADDRESS
	la $t1, level
	
	lw $t4, platformcolour
	
	addi $t0, $t0, 24		# The right side of my sprite
	
	addi $t0, $t0, 4		# Location we are checking
	sub $t2, $t0, $s0 		# Curent player location - BASE_ADDRESS to find how much they differ by
	add $t1, $t1, $t2		# Add this difference to the address of the array index for the level
	
	li $t8, 8 			# Row counter
	collision_right_loop:
		beqz $t8, no_collision_right
		
		lw $t3, 0($t1) 		# Load the background pixel
		beq $t3, $t4, found_collision_right # If the background colour at this position equals the platform colour then there is a collision
		
		li $t5, OFFSET 		# Offset for my pixels
	
		add $t1, $t1, $t5	# Find the next pixel to check by adding offset
		
		subi $t8, $t8, 1 	# Decrement Row counter
		
		j collision_right_loop
		
	no_collision_right: 
		la $s1, collision 	# Update the collision variable
		li $s2, 0
		sw $s2, 0($s1)
		jr $ra
	
	found_collision_right:
		la $s1, collision 	# Update the collision variable
		li $s2, 1
		sw $s2, 0($s1)
		jr $ra 


check_collision_below:
	lw $t0, curplayerlocation
	li $s0, BASE_ADDRESS
	la $t1, level
	
	lw $t4, platformcolour
	
	addi $t0, $t0, 8		# The left side of my sprite
	
	li $t5, OFFSET 			# Offset for my pixels
	
	mul $t5, $t5, 8			# We need to move down by 8 pixels to reach the bottom of the sprite
	
	add $t0, $t0, $t5		# Adding this offset
	
	sub $t2, $t0, $s0 		# Curent player location - BASE_ADDRESS to find how much they differ by
	add $t1, $t1, $t2		# Add this difference to the address of the array index for the level
	
	li $t8, 5
	collision_below_loop:
	
		beqz $t8, no_collision_below
		
		lw $t3, 0($t1) 		# Load the background pixel
		beq $t3, $t4, found_collision_below # If the background colour at this position equals the platform colour then there is a collision
		
		addi $t1, $t1, 4 	# Move one pixel to the right
		
		subi $t8, $t8, 1 	# Decrement Row counter
		
		j collision_below_loop
	
	no_collision_below:
		la $s1, collision 	# Update the collision variable
		li $s2, 0
		sw $s2, 0($s1)
		jr $ra
	found_collision_below:
		la $s1, collision 	# Update the collision variable
		li $s2, 1
		sw $s2, 0($s1)
		jr $ra 

# Ends Program
li $v0, 10
syscall

